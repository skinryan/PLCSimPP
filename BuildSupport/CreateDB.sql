USE [master]
GO

/****** Object:  Database [PLCSimPP]    Script Date: 3/27/2020 8:55:25 AM ******/
if exists (select * from sys.databases where name = 'PLCSimPP')  
  drop database [PLCSimPP] 

/****** Object:  Database [PLCSimPP]    Script Date: 3/27/2020 8:55:25 AM ******/
CREATE DATABASE [PLCSimPP]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'PLCSimPP', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\PLCSimPP.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'PLCSimPP_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\PLCSimPP_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
GO

ALTER DATABASE [PLCSimPP] SET COMPATIBILITY_LEVEL = 130
GO

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [PLCSimPP].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

ALTER DATABASE [PLCSimPP] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [PLCSimPP] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [PLCSimPP] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [PLCSimPP] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [PLCSimPP] SET ARITHABORT OFF 
GO

ALTER DATABASE [PLCSimPP] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [PLCSimPP] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [PLCSimPP] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [PLCSimPP] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [PLCSimPP] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [PLCSimPP] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [PLCSimPP] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [PLCSimPP] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [PLCSimPP] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [PLCSimPP] SET  DISABLE_BROKER 
GO

ALTER DATABASE [PLCSimPP] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [PLCSimPP] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [PLCSimPP] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [PLCSimPP] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [PLCSimPP] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [PLCSimPP] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [PLCSimPP] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [PLCSimPP] SET RECOVERY FULL 
GO

ALTER DATABASE [PLCSimPP] SET  MULTI_USER 
GO

ALTER DATABASE [PLCSimPP] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [PLCSimPP] SET DB_CHAINING OFF 
GO

ALTER DATABASE [PLCSimPP] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [PLCSimPP] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [PLCSimPP] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [PLCSimPP] SET QUERY_STORE = OFF
GO

USE [PLCSimPP]
GO

ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
GO

ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
GO

ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
GO

ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
GO

ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
GO

ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
GO

ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
GO

ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
GO

ALTER DATABASE [PLCSimPP] SET  READ_WRITE 
GO


USE [PLCSimPP]
GO

/****** Object:  Table [dbo].[MsgLog]    Script Date: 3/27/2020 8:55:35 AM ******/
if exists (select * from sysobjects where id = object_id(N'[MsgLog]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)  
  drop table [MsgLog] 

/****** Object:  Table [dbo].[MsgLog]    Script Date: 3/27/2020 8:55:35 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[MsgLog](
	[ID] [bigint] IDENTITY(1,1) NOT NULL,
	[Time] [datetime] NULL,
	[Direction] [nvarchar](4) NULL,
	[Address] [nvarchar](20) NULL,
	[Command] [nvarchar](4) NULL,
	[Details] [nvarchar](200) NULL,
	[Token] [nvarchar](50) NULL,
 CONSTRAINT [PK_MsgLog] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO


USE [PLCSimPP]
GO

if exists (select * from sysobjects where id = object_id(N'[ProcGetPageData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)  
  drop procedure [ProcGetPageData]

/****** Object:  StoredProcedure [dbo].[ProcGetPageData]    Script Date: 3/27/2020 9:17:38 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




Create PROCEDURE [dbo].[ProcGetPageData]
(  @TableName VARCHAR(1000), --表名,多表是请使用 tA a inner join tB b On a.AID = b.AID
   @PrimaryKey NVARCHAR(100),    --主键，可以带表头 a.AID
   @Fields NVARCHAR(2000) = '*',--读取字段
   @Condition NVARCHAR(3000) = '',--Where条件
   @CurrentPage INT = 1,    --开始页码
   @PageSize INT = 10,        --页大小
   @Sort NVARCHAR(200) = '', --排序字段
   @RecordCount INT = 0 OUT
)
AS
DECLARE @strWhere VARCHAR(2000)
DECLARE @strsql NVARCHAR(3900)
IF @Condition IS NOT NULL AND len(ltrim(rtrim(@Condition)))>0
  BEGIN
   SET @strWhere = ' WHERE ' + @Condition + ' '
  END
ELSE
  BEGIN
   SET @strWhere = ''
  END
        
IF (charindex(ltrim(rtrim(@PrimaryKey)),@Sort)=0)
BEGIN
    IF(@Sort='')
        SET @Sort = @PrimaryKey + ' DESC '
    ELSE
        SET @Sort = @Sort+ ' , '+@PrimaryKey + ' DESC '
END
SET @strsql = 'SELECT @RecordCount = Count(1) FROM ' + @TableName + @strWhere  
EXECUTE sp_executesql @strsql ,N'@RecordCount INT output',@RecordCount OUTPUT
IF @CurrentPage = 1 --第一页提高性能
BEGIN 
  SET @strsql = 'SELECT TOP ' + str(@PageSize) +' '+@Fields
              + '  FROM ' + @TableName + ' ' + @strWhere + ' ORDER BY  '+ @Sort
END 
ELSE
  BEGIN
    /* Execute dynamic query */    
    DECLARE @START_ID NVARCHAR(50)
    DECLARE @END_ID NVARCHAR(50)
    SET @START_ID = CONVERT(NVARCHAR(50),(@CurrentPage - 1) * @PageSize + 1)
    SET @END_ID = CONVERT(NVARCHAR(50),@CurrentPage * @PageSize)
    SET @strsql =  ' SELECT *
   FROM (SELECT ROW_NUMBER() OVER(ORDER BY '+@Sort+') AS rownum, 
     '+@Fields+ '
      FROM '+@TableName + @strWhere +') AS XX
   WHERE rownum BETWEEN '+@START_ID+' AND ' +@END_ID +' ORDER BY XX.rownum ASC'
  END
EXEC(@strsql)
RETURN





GO


